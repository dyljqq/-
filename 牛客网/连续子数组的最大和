连续子数组的最大和

思路：遍历一遍整个数组，如果碰见和小于0，那么就从当前位置的下一位置继续遍历，保留当前的最大值，遍历完后，输出最大值

代码：
class Solution {
public:
    int FindGreatestSumOfSubArray(vector<int> array) {
        if(array.size() == 0)
            return 0;
    	int max = -999999;
        int sum = 0;
        for(int i = 0; i < array.size(); i++){
            sum += array[i];
            if(sum > max)
                max = sum;
            if(sum < 0)
                sum = 0;
        }
        return max;
    }
};
