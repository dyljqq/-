64. Minimum Path Sum

题目：
Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

思路：先暴力破解，然后爆炸，然后用动态规划：v[i][j] = v[i - 1][j] + v[i][j - 1];

代码：
class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size(), n;
        if(m == 0){
            return 0;
        }
        n = grid[0].size();
        vector<vector<int>> vv;
        for(int i = 0; i <= m; i++){
            vector<int> v;
            for(int j = 0; j <= n; j++){
                v.push_back(0);
            }
            vv.push_back(v);
        }
        for(int i = 1; i <= m; i++){
            for(int j = 1; j <= n; j++){
                if(i == 1){
                    vv[i][j] = vv[i][j - 1] + grid[i - 1][j - 1];
                }else if(j == 1){
                    vv[i][j] = vv[i - 1][j] + grid[i - 1][j - 1];
                }else{
                    vv[i][j] = min(vv[i - 1][j], vv[i][j - 1]) + grid[i - 1][j - 1];
                }
            }
        }
        return vv[m][n];
    }
};
