141. Linked List Cycle

思路：通过两个指针，第一个只加一个，第二个每次加两个，这样如果有环，那么这两个指针一定会相遇。需要注意的大概是空指针的问题吧

代码：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head == NULL || head->next == NULL)
            return false;
        ListNode* p = head, *q = head->next->next;
        while(q != NULL && q->next != NULL){
            if(p == q)
                return true;
            p = p->next;
            q = q->next->next;
        }
        return false;
    }
};
