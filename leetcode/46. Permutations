46. Permutations

题目:
Given a collection of distinct numbers, return all possible permutations.

For example,
[1,2,3] have the following permutations:
[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], and [3,2,1].

思路：递归，交换数据。

代码：
class Solution {
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> v;
        int n = nums.size() - 1;
        allPermute(nums, 0, n, v);
        return v;
    }

    void allPermute(vector<int> nums, int k, int n, vector<vector<int> > &v){
        if(k == n){
            v.push_back(nums);
            return ;
        }
        for(int i = k; i <= n; i++){
            swap(nums, i, k);
            allPermute(nums, k+1, n, v);
            swap(nums, i, k);
        }
    }

    void swap(vector<int>& nums, int a, int b){
        int temp = nums[a];
        nums[a] = nums[b];
        nums[b] = temp;
    }
};
