74. Search a 2D Matrix

题目：
Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:

Integers in each row are sorted from left to right.
The first integer of each row is greater than the last integer of the previous row.

思路：把这个二维数组转化成一维数组

代码：
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        if(matrix.size() <= 0){
            return false;
        }
        int row = matrix.size();
        int col = matrix[0].size();
        int end = row * col - 1, start = 0, mid;
        while(start <= end){
            mid = (end + start)/2;
            int i = mid / col;
            int j = mid % col;
            int elem = matrix[i][j];
            if(elem > target){
                end = mid - 1;
            }else if(elem < target){
                start = mid + 1;
            }else{
                return true;
            }
        }
        return false;
    }
};
