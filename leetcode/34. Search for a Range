34. Search for a Range

题目：
Given a sorted array of integers, find the starting and ending position of a given target value.

Your algorithm's runtime complexity must be in the order of O(log n).

If the target is not found in the array, return [-1, -1].

For example,
Given [5, 7, 7, 8, 8, 10] and target value 8,
return [3, 4].

思路：二分查找最左边的和target相同的数，然后其实可以再次二分查找右边界，但是偷了个懒，所以直接遍历查找。

代码：
class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> v = {-1, -1};
        int start = 0, end = nums.size() - 1, n = nums.size();
        while(start <= end){
            int mid = (start + end) / 2;
            if(nums[mid] >= target){
                end = mid - 1;
            }else{
                start = mid + 1;
            }
        }
        if(nums[start] != target)
            return v;
        v[0] = start;
        while(start < n){
            if(start == n - 1 && nums[start] == target){
                v[1] = start;
                return v;
            }
            if(nums[start] != target){
                v[1] = start - 1;
                break;
            }
            start++;
        }
        return v;
    }
};
