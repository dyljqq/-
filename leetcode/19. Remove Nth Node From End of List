19. Remove Nth Node From End of List

题目：Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.

思路：就是用两个指针，他们相差n个节点。需要注意的就是边界问题。

代码：
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head == NULL || n <= 0)
            return head;
        ListNode* p = head, *q = head;
        int index = n;
        while(index--){
            if(q == NULL)
                return head;
            q = q->next;
        }
        while(q != NULL && q->next != NULL){
            q = q->next;
            p = p->next;
        }
        if(q != NULL){
            ListNode* temp = p->next;
            p->next = temp->next;
            temp = NULL;
        }else{
            return head->next;
        }
        return head;
    }
};
